library("knitr")
library("stringr")
library("plyr")
library("dplyr")
library("ggplot2")
library("tidyr")
experiments.file <- dir(path = "./Scripts", "p0", full.names = TRUE)
experimentName <- str_split(str_split(experiments.file[1], "Scripts/")[[1]][2], ".R")[[1]][1]
options(stringsAsFactors = FALSE)
source("./Scripts/wMT_fxns.R")
source("./Scripts/survival_fxns.R")
source(paste("./Scripts/", experimentName, ".R", sep = ""))
processedDataPath <- paste("./Data/Processed/", experimentName, sep = "")
saveDataLocation <- paste(processedDataPath, "/", experimentName, sep = "")
paste(experimentName)
experimentFile <- dir(path = paste("./Data/Raw/", experimentName, sep = ""),
pattern = ".txt",
full.names = TRUE)
report.df <- processMicrotrackerReport(experimentFile)
binSize = report.df$binSize[1]
numGroups = report.df$numGroups[1]
numBins = report.df$numBins[1]
time = report.df$time[1]
raw.df <- generateDataFrameFromFile(report.df)
View(report.df)
View(raw.df)
save(raw.df, file = paste(processedDataPath, "/", experimentName, "_Raw.Rda", sep = ""), ascii = TRUE)
ordered.df <- raw.df[order(raw.df$col, raw.df$row, raw.df$time), ]
ordered.df$strain <- rep(strains, each = numBins)
View(ordered.df)
ordered.df <- raw.df[order(raw.df$col, raw.df$row, raw.df$time), ]
ordered.df$strain <- rep(strains, each = numBins * replicates)
replicates <- 8
ordered.df$strain <- rep(strains, each = numBins * replicates)
View(ordered.df)
save(raw.df, file = paste(processedDataPath, "/", experimentName, "_Raw.Rda", sep = ""), ascii = TRUE)
save(ordered.df, file = paste(processedDataPath, "/", experimentName, "_Processed.Rda", sep = ""), ascii = TRUE)
ggplot(ordered.df) + aes(x = time, y = activity) + geom_point() + facet_grid(row ~ col) +
labs(x = "Time (minutes)", y = "Raw Activity") + presentation
cleaned.df <- ordered.df
cleaned.df$activity[(ordered.df$col %in% colRemove)] <- NA
cleaned.df$activity[(ordered.df$row %in% rowRemove)] <- NA
for(i in 1:nrow(wellRemove)) {
cleaned.df$activity[cleaned.df$row == wellRemove$row[i] & cleaned.df$col == wellRemove$col[i]] <- NA
}
save(cleaned.df, file = paste(processedDataPath, "/", experimentName, "_Cleaned.Rda", sep = ""), ascii = TRUE)
ggplot(cleaned.df) + aes(x = time, y = activity) + geom_line() + facet_grid(row ~ col) +
labs(x= "Time (minutes)", y = "Raw Activity") + presentation
well.df <- cleaned.df %>%
group_by(col) %>%
mutate(norm.act = 100 * activity / max(activity, na.rm = TRUE))
well.df <- ungroup(well.df)
save(well.df, file = paste(processedDataPath, "/", experimentName, "_Well.Rda", sep = ""), ascii = TRUE)
ggplot(well.df) + aes(x = time, y = norm.act) + ylim(0, 100) + geom_line() + facet_grid(row ~ col) +
labs(x = "Time (minutes)", y = "Normalized Activity") + presentation
ggplot(well.df[well.df$time == time, ]) + aes(x = conc, y = activity, color = factor(col)) + geom_line() +
labs(x = "Concentration of Drug (ÂµM)", y = "Activity") + presentation
if (length(strains) != length(unique(strains))) {
strain.df <- well.df %>%
group_by(strain, conc, time) %>%
summarise(mean.activity = mean(activity, na.rm = TRUE),
sd.activity = sd(activity, na.rm = TRUE),
median.activity = median(activity, na.rm = TRUE),
total.activity = sum(activity, na.rm = TRUE))
strain.df <- ungroup(strain.df)
for (i in 1:nrow(strain.df)) {
if (strain.df$total.activity[i] == 0) strain.df$total.activity[i] <- NA
if (!is.finite(strain.df$mean.activity[i])) strain.df$mean.activity[i] <- NA
if (!is.finite(strain.df$sd.activity[i])) strain.df$sd.activity[i] <- NA
}
} else print("No strain replicates to display.")
if (length(strains) != length(unique(strains))) {
strain.df <- well.df %>%
group_by(strain, time) %>%
summarise(mean.activity = mean(activity, na.rm = TRUE),
sd.activity = sd(activity, na.rm = TRUE),
median.activity = median(activity, na.rm = TRUE),
total.activity = sum(activity, na.rm = TRUE))
strain.df <- ungroup(strain.df)
for (i in 1:nrow(strain.df)) {
if (strain.df$total.activity[i] == 0) strain.df$total.activity[i] <- NA
if (!is.finite(strain.df$mean.activity[i])) strain.df$mean.activity[i] <- NA
if (!is.finite(strain.df$sd.activity[i])) strain.df$sd.activity[i] <- NA
}
} else print("No strain replicates to display.")
View(strain.df)
if (length(strains) != length(unique(strains))) {
ggplot(strain.df) + geom_line(aes(x = time, y = mean.activity)) +
geom_errorbar(aes(x = time, ymin = mean.activity - sd.activity, ymax = mean.activity + sd.activity)) +
facet_grid(conc ~ strain) + labs(x = "Time (minutes)", y = "Mean Activity") + presentation
}
if (length(strains) != length(unique(strains))) {
ggplot(strain.df) + geom_line(aes(x = time, y = mean.activity)) +
geom_errorbar(aes(x = time, ymin = mean.activity - sd.activity, ymax = mean.activity + sd.activity)) +
facet_wrap( ~ strain) + labs(x = "Time (minutes)", y = "Mean Activity") + presentation
}
if (length(strains) != length(unique(strains))) {
ggplot(strain.df) + aes(x = time, y = median.activity) + geom_line() + facet_wrap( ~ strain) +
labs(x = "Time (minutes)", y = "Median Activity") + presentation
}
if (length(strains) != length(unique(strains))) {
ggplot(strain.df) + aes(x = time, y = total.activity) + geom_line() + facet_wrap( ~ strain) +
labs(x = "Time (minutes)", y = "Total Activity") + presentation
}
if (length(strains) != length(unique(strains))) {
strain.df <- strain.df %>%
group_by(strain) %>%
mutate(norm.act = 100 * total.activity / max(total.activity, na.rm = TRUE))
strain.df <- ungroup(strain.df)
}
if (length(strains) != length(unique(strains))) {
ggplot(strain.df) + aes(x = time, y = norm.act) + ylim(0, 100) + geom_line() + facet_wrap( ~ strain) +
labs(x = "Time (minutes)", y = "Normalized Activity") + presentation
}
knit2html("./Scripts/Longevity_Report.Rmd",
output = paste("./Results/", experimentName, "_Report.html", sep = ""),
stylesheet = "./Scripts/foghorn_edited.css")
knit2html("./Scripts/Dose_Response_Report.Rmd",
output = paste("./Results/", experimentName, "_Report.html", sep = ""),
stylesheet = "./Scripts/foghorn_edited.css")
knit2html("./Scripts/Dose_Heritability_Report.Rmd",
output = paste("./Results/", experimentName, "_Report.html", sep = ""),
stylesheet = "./Scripts/foghorn_edited.css")
experiments.file <- dir(path = "./Scripts", "p0", full.names = TRUE)
opts_knit$set(root.dir = getwd())
for (i in 1:length(experiments.file)) {
experimentName <- str_split(str_split(experiments.file[i], "Scripts/")[[1]][2], ".R")[[1]][1]
knit2html("./Scripts/Longevity_Report.Rmd",
output = paste("./Results/", experimentName, "_Report.html", sep = ""),
stylesheet = "./Scripts/foghorn_edited.css")
fds
fsdfsadfds
sfsdff;
3
$
experiments.file <- dir(path = "./Scripts", "p0", full.names = TRUE)
opts_knit$set(root.dir = getwd())
for (i in 1:length(experiments.file)) {
experimentName <- str_split(str_split(experiments.file[i], "Scripts/")[[1]][2], ".R")[[1]][1]
knit2html("./Scripts/Dose_Heritability_Report.Rmd",
output = paste("./Results/", experimentName, "_Report.html", sep = ""),
stylesheet = "./Scripts/foghorn_edited.css")
}
experiments.file <- dir(path = "./Scripts", "p0", full.names = TRUE)
opts_knit$set(root.dir = getwd())
for (i in 1:length(experiments.file)) {
experimentName <- str_split(str_split(experiments.file[i], "Scripts/")[[1]][2], ".R")[[1]][1]
knit2html("./Scripts/Dose_Heritability_Report.Rmd",
output = paste("./Results/", experimentName, "_Report.html", sep = ""),
stylesheet = "./Scripts/foghorn_edited.css")
}
for (i in 1:length(experiments.file)) {
experimentName <- str_split(str_split(experiments.file[i], "Scripts/")[[1]][2], ".R")[[1]][1]
knit2html("./Scripts/Dose_Heritability_Report.Rmd",
output = paste("./Results/", experimentName, "_Report.html", sep = ""),
stylesheet = "./Scripts/foghorn_edited.css")
}
